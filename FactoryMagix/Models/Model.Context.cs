//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FactoryMagix.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BOSCH_PPTSEntities : DbContext
    {
        public BOSCH_PPTSEntities()
            : base("name=BOSCH_PPTSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<HST_TRN_BoxBarcodeDetails> HST_TRN_BoxBarcodeDetails { get; set; }
        public virtual DbSet<HST_TRN_BoxSerialNo> HST_TRN_BoxSerialNo { get; set; }
        public virtual DbSet<HST_TRN_InvoiceDetails> HST_TRN_InvoiceDetails { get; set; }
        public virtual DbSet<HST_TRN_PalletSerialNo> HST_TRN_PalletSerialNo { get; set; }
        public virtual DbSet<HST_TRN_ScanPartBarcode> HST_TRN_ScanPartBarcode { get; set; }
        public virtual DbSet<MST_BioMetric> MST_BioMetric { get; set; }
        public virtual DbSet<MST_Customer> MST_Customer { get; set; }
        public virtual DbSet<MST_Form> MST_Form { get; set; }
        public virtual DbSet<MST_Machine> MST_Machine { get; set; }
        public virtual DbSet<MST_Module> MST_Module { get; set; }
        public virtual DbSet<MST_PartConfiguration> MST_PartConfiguration { get; set; }
        public virtual DbSet<MST_Role> MST_Role { get; set; }
        public virtual DbSet<MST_SubModule> MST_SubModule { get; set; }
        public virtual DbSet<MST_User> MST_User { get; set; }
        public virtual DbSet<REL_UserForm> REL_UserForm { get; set; }
        public virtual DbSet<TRN_BoxBarcodeDetails> TRN_BoxBarcodeDetails { get; set; }
        public virtual DbSet<TRN_BoxSerialNo> TRN_BoxSerialNo { get; set; }
        public virtual DbSet<TRN_InvoiceDetails> TRN_InvoiceDetails { get; set; }
        public virtual DbSet<TRN_PalletSerialNo> TRN_PalletSerialNo { get; set; }
        public virtual DbSet<TRN_ScanPartBarcode> TRN_ScanPartBarcode { get; set; }
        public virtual DbSet<BoxSerialNo> BoxSerialNo { get; set; }
        public virtual DbSet<ErrorLog> ErrorLog { get; set; }
        public virtual DbSet<MST_Cust_Bosch_PartNo_Rel> MST_Cust_Bosch_PartNo_Rel { get; set; }
        public virtual DbSet<PalletSerialNo> PalletSerialNo { get; set; }
        public virtual DbSet<TRN_PalletLable_Verify> TRN_PalletLable_Verify { get; set; }
        public virtual DbSet<vw_TRN_BoxBarcodeDetails> vw_TRN_BoxBarcodeDetails { get; set; }
        public virtual DbSet<vw_TRN_BoxSerialNo> vw_TRN_BoxSerialNo { get; set; }
        public virtual DbSet<vw_TRN_InvoiceDetails> vw_TRN_InvoiceDetails { get; set; }
        public virtual DbSet<vw_TRN_PalletSerialNo> vw_TRN_PalletSerialNo { get; set; }
        public virtual DbSet<vw_TRN_ScanPartBarcode> vw_TRN_ScanPartBarcode { get; set; }
    
        [DbFunction("BOSCH_PPTSEntities", "fnSplitString")]
        public virtual IQueryable<fnSplitString_Result> fnSplitString(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("string", @string) :
                new ObjectParameter("string", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnSplitString_Result>("[BOSCH_PPTSEntities].[fnSplitString](@string, @delimiter)", stringParameter, delimiterParameter);
        }
    
        public virtual int spAddRelationalFormUser(Nullable<long> pUserId, Nullable<long> pFormID, Nullable<bool> pFlagVisible, Nullable<long> pCreatedBy, Nullable<long> pModifiedBy)
        {
            var pUserIdParameter = pUserId.HasValue ?
                new ObjectParameter("pUserId", pUserId) :
                new ObjectParameter("pUserId", typeof(long));
    
            var pFormIDParameter = pFormID.HasValue ?
                new ObjectParameter("pFormID", pFormID) :
                new ObjectParameter("pFormID", typeof(long));
    
            var pFlagVisibleParameter = pFlagVisible.HasValue ?
                new ObjectParameter("pFlagVisible", pFlagVisible) :
                new ObjectParameter("pFlagVisible", typeof(bool));
    
            var pCreatedByParameter = pCreatedBy.HasValue ?
                new ObjectParameter("pCreatedBy", pCreatedBy) :
                new ObjectParameter("pCreatedBy", typeof(long));
    
            var pModifiedByParameter = pModifiedBy.HasValue ?
                new ObjectParameter("pModifiedBy", pModifiedBy) :
                new ObjectParameter("pModifiedBy", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddRelationalFormUser", pUserIdParameter, pFormIDParameter, pFlagVisibleParameter, pCreatedByParameter, pModifiedByParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spCheckBoxScanedSrNo(string boxBatchNo, string boxSerialNo, Nullable<long> partConfigID)
        {
            var boxBatchNoParameter = boxBatchNo != null ?
                new ObjectParameter("BoxBatchNo", boxBatchNo) :
                new ObjectParameter("BoxBatchNo", typeof(string));
    
            var boxSerialNoParameter = boxSerialNo != null ?
                new ObjectParameter("BoxSerialNo", boxSerialNo) :
                new ObjectParameter("BoxSerialNo", typeof(string));
    
            var partConfigIDParameter = partConfigID.HasValue ?
                new ObjectParameter("PartConfigID", partConfigID) :
                new ObjectParameter("PartConfigID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spCheckBoxScanedSrNo", boxBatchNoParameter, boxSerialNoParameter, partConfigIDParameter);
        }
    
        public virtual ObjectResult<byte[]> spCheckFingerPrint(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("spCheckFingerPrint", useridParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spCheckFingerPrintCount(Nullable<long> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spCheckFingerPrintCount", useridParameter);
        }
    
        public virtual ObjectResult<spCheckPartconfiguration_Result> spCheckPartconfiguration(string custName, string custIndex, string custCode, string partNo)
        {
            var custNameParameter = custName != null ?
                new ObjectParameter("CustName", custName) :
                new ObjectParameter("CustName", typeof(string));
    
            var custIndexParameter = custIndex != null ?
                new ObjectParameter("CustIndex", custIndex) :
                new ObjectParameter("CustIndex", typeof(string));
    
            var custCodeParameter = custCode != null ?
                new ObjectParameter("CustCode", custCode) :
                new ObjectParameter("CustCode", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCheckPartconfiguration_Result>("spCheckPartconfiguration", custNameParameter, custIndexParameter, custCodeParameter, partNoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spCheckPartNoScaned(string partNo, string batchNo, string serialNo, Nullable<long> partConfigID)
        {
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var batchNoParameter = batchNo != null ?
                new ObjectParameter("BatchNo", batchNo) :
                new ObjectParameter("BatchNo", typeof(string));
    
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("SerialNo", serialNo) :
                new ObjectParameter("SerialNo", typeof(string));
    
            var partConfigIDParameter = partConfigID.HasValue ?
                new ObjectParameter("PartConfigID", partConfigID) :
                new ObjectParameter("PartConfigID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spCheckPartNoScaned", partNoParameter, batchNoParameter, serialNoParameter, partConfigIDParameter);
        }
    
        public virtual int spDeleteAndSelectTRN_BoxLable_Verify(string partConfigID, string uniqueID)
        {
            var partConfigIDParameter = partConfigID != null ?
                new ObjectParameter("PartConfigID", partConfigID) :
                new ObjectParameter("PartConfigID", typeof(string));
    
            var uniqueIDParameter = uniqueID != null ?
                new ObjectParameter("UniqueID", uniqueID) :
                new ObjectParameter("UniqueID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteAndSelectTRN_BoxLable_Verify", partConfigIDParameter, uniqueIDParameter);
        }
    
        public virtual int spDeleteAndSelectTRN_PalletLable_Verify(string partConfigID, string uniqueID)
        {
            var partConfigIDParameter = partConfigID != null ?
                new ObjectParameter("PartConfigID", partConfigID) :
                new ObjectParameter("PartConfigID", typeof(string));
    
            var uniqueIDParameter = uniqueID != null ?
                new ObjectParameter("UniqueID", uniqueID) :
                new ObjectParameter("UniqueID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteAndSelectTRN_PalletLable_Verify", partConfigIDParameter, uniqueIDParameter);
        }
    
        public virtual ObjectResult<spGetAllPartNowithIndex_Result> spGetAllPartNowithIndex()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetAllPartNowithIndex_Result>("spGetAllPartNowithIndex");
        }
    
        public virtual ObjectResult<spGetBarcodeDataprint_Result> spGetBarcodeDataprint(string serialNo, Nullable<long> flagforPalletorBox)
        {
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("SerialNo", serialNo) :
                new ObjectParameter("SerialNo", typeof(string));
    
            var flagforPalletorBoxParameter = flagforPalletorBox.HasValue ?
                new ObjectParameter("FlagforPalletorBox", flagforPalletorBox) :
                new ObjectParameter("FlagforPalletorBox", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetBarcodeDataprint_Result>("spGetBarcodeDataprint", serialNoParameter, flagforPalletorBoxParameter);
        }
    
        public virtual ObjectResult<spGetBoschPartNoFromCustPartNo_Result> spGetBoschPartNoFromCustPartNo(string custPartNo, string kanbanId)
        {
            var custPartNoParameter = custPartNo != null ?
                new ObjectParameter("custPartNo", custPartNo) :
                new ObjectParameter("custPartNo", typeof(string));
    
            var kanbanIdParameter = kanbanId != null ?
                new ObjectParameter("kanbanId", kanbanId) :
                new ObjectParameter("kanbanId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetBoschPartNoFromCustPartNo_Result>("spGetBoschPartNoFromCustPartNo", custPartNoParameter, kanbanIdParameter);
        }
    
        public virtual ObjectResult<spGetBoxDateWiseReport_Result> spGetBoxDateWiseReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetBoxDateWiseReport_Result>("spGetBoxDateWiseReport", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<spGetBoxSerialNoReport_Result> spGetBoxSerialNoReport(string boSrNoNo, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<bool> datewisereport)
        {
            var boSrNoNoParameter = boSrNoNo != null ?
                new ObjectParameter("BoSrNoNo", boSrNoNo) :
                new ObjectParameter("BoSrNoNo", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var datewisereportParameter = datewisereport.HasValue ?
                new ObjectParameter("Datewisereport", datewisereport) :
                new ObjectParameter("Datewisereport", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetBoxSerialNoReport_Result>("spGetBoxSerialNoReport", boSrNoNoParameter, fromDateParameter, toDateParameter, datewisereportParameter);
        }
    
        public virtual ObjectResult<spGetFormsandModuleforUser_Result> spGetFormsandModuleforUser(Nullable<long> pUser_Id)
        {
            var pUser_IdParameter = pUser_Id.HasValue ?
                new ObjectParameter("pUser_Id", pUser_Id) :
                new ObjectParameter("pUser_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetFormsandModuleforUser_Result>("spGetFormsandModuleforUser", pUser_IdParameter);
        }
    
        public virtual ObjectResult<spGetInvoiceReport_Result> spGetInvoiceReport(string invoiceNo, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate, Nullable<bool> datewisereport)
        {
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            var datewisereportParameter = datewisereport.HasValue ?
                new ObjectParameter("Datewisereport", datewisereport) :
                new ObjectParameter("Datewisereport", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetInvoiceReport_Result>("spGetInvoiceReport", invoiceNoParameter, fromDateParameter, todateParameter, datewisereportParameter);
        }
    
        public virtual ObjectResult<spGetInvoiceReportDatewise_Result> spGetInvoiceReportDatewise(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetInvoiceReportDatewise_Result>("spGetInvoiceReportDatewise", fromDateParameter, todateParameter);
        }
    
        public virtual ObjectResult<spGetPalletBarcodeDataprint_Result> spGetPalletBarcodeDataprint(string serialNo, Nullable<long> flagforPalletorBox)
        {
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("SerialNo", serialNo) :
                new ObjectParameter("SerialNo", typeof(string));
    
            var flagforPalletorBoxParameter = flagforPalletorBox.HasValue ?
                new ObjectParameter("FlagforPalletorBox", flagforPalletorBox) :
                new ObjectParameter("FlagforPalletorBox", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetPalletBarcodeDataprint_Result>("spGetPalletBarcodeDataprint", serialNoParameter, flagforPalletorBoxParameter);
        }
    
        public virtual ObjectResult<spGetPalletDateWiseReport_Result> spGetPalletDateWiseReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetPalletDateWiseReport_Result>("spGetPalletDateWiseReport", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<spGetPalletWiseReport_Result> spGetPalletWiseReport(string palletNo, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<bool> datewisereport)
        {
            var palletNoParameter = palletNo != null ?
                new ObjectParameter("PalletNo", palletNo) :
                new ObjectParameter("PalletNo", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var datewisereportParameter = datewisereport.HasValue ?
                new ObjectParameter("Datewisereport", datewisereport) :
                new ObjectParameter("Datewisereport", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetPalletWiseReport_Result>("spGetPalletWiseReport", palletNoParameter, fromDateParameter, toDateParameter, datewisereportParameter);
        }
    
        public virtual ObjectResult<spGetPartDetails_Result> spGetPartDetails(Nullable<long> pPartConfiguration_Id)
        {
            var pPartConfiguration_IdParameter = pPartConfiguration_Id.HasValue ?
                new ObjectParameter("pPartConfiguration_Id", pPartConfiguration_Id) :
                new ObjectParameter("pPartConfiguration_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetPartDetails_Result>("spGetPartDetails", pPartConfiguration_IdParameter);
        }
    
        public virtual ObjectResult<spGetPartSerialNoReport_Result> spGetPartSerialNoReport(string partSrNoorBatchCode, Nullable<bool> partSerialNowise)
        {
            var partSrNoorBatchCodeParameter = partSrNoorBatchCode != null ?
                new ObjectParameter("PartSrNoorBatchCode", partSrNoorBatchCode) :
                new ObjectParameter("PartSrNoorBatchCode", typeof(string));
    
            var partSerialNowiseParameter = partSerialNowise.HasValue ?
                new ObjectParameter("PartSerialNowise", partSerialNowise) :
                new ObjectParameter("PartSerialNowise", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetPartSerialNoReport_Result>("spGetPartSerialNoReport", partSrNoorBatchCodeParameter, partSerialNowiseParameter);
        }
    
        public virtual ObjectResult<spGetUserInfo_Result> spGetUserInfo(string pLoginID, string pPass)
        {
            var pLoginIDParameter = pLoginID != null ?
                new ObjectParameter("pLoginID", pLoginID) :
                new ObjectParameter("pLoginID", typeof(string));
    
            var pPassParameter = pPass != null ?
                new ObjectParameter("pPass", pPass) :
                new ObjectParameter("pPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetUserInfo_Result>("spGetUserInfo", pLoginIDParameter, pPassParameter);
        }
    
        public virtual int spInsertBiometricdata(Nullable<long> userId, Nullable<long> created_By, byte[] fingerprint)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(long));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(long));
    
            var fingerprintParameter = fingerprint != null ?
                new ObjectParameter("fingerprint", fingerprint) :
                new ObjectParameter("fingerprint", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertBiometricdata", userIdParameter, created_ByParameter, fingerprintParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spInsertBoxDetails(Nullable<long> partConfig_Id, string boschPartNo, Nullable<long> tRN_BoxSerialNo_ID, string partBatchCode, string partSerialNo, Nullable<long> actualQty, Nullable<long> machineId, Nullable<long> created_By)
        {
            var partConfig_IdParameter = partConfig_Id.HasValue ?
                new ObjectParameter("PartConfig_Id", partConfig_Id) :
                new ObjectParameter("PartConfig_Id", typeof(long));
    
            var boschPartNoParameter = boschPartNo != null ?
                new ObjectParameter("BoschPartNo", boschPartNo) :
                new ObjectParameter("BoschPartNo", typeof(string));
    
            var tRN_BoxSerialNo_IDParameter = tRN_BoxSerialNo_ID.HasValue ?
                new ObjectParameter("TRN_BoxSerialNo_ID", tRN_BoxSerialNo_ID) :
                new ObjectParameter("TRN_BoxSerialNo_ID", typeof(long));
    
            var partBatchCodeParameter = partBatchCode != null ?
                new ObjectParameter("partBatchCode", partBatchCode) :
                new ObjectParameter("partBatchCode", typeof(string));
    
            var partSerialNoParameter = partSerialNo != null ?
                new ObjectParameter("PartSerialNo", partSerialNo) :
                new ObjectParameter("PartSerialNo", typeof(string));
    
            var actualQtyParameter = actualQty.HasValue ?
                new ObjectParameter("ActualQty", actualQty) :
                new ObjectParameter("ActualQty", typeof(long));
    
            var machineIdParameter = machineId.HasValue ?
                new ObjectParameter("MachineId", machineId) :
                new ObjectParameter("MachineId", typeof(long));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("created_By", created_By) :
                new ObjectParameter("created_By", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spInsertBoxDetails", partConfig_IdParameter, boschPartNoParameter, tRN_BoxSerialNo_IDParameter, partBatchCodeParameter, partSerialNoParameter, actualQtyParameter, machineIdParameter, created_ByParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spInsertBoxLable_Verify(Nullable<long> partConfig_Id, Nullable<long> partActualQty, Nullable<long> machineId, Nullable<long> created_By, string boschPartNo, string partBatchCode, string partSerialNo, string code)
        {
            var partConfig_IdParameter = partConfig_Id.HasValue ?
                new ObjectParameter("PartConfig_Id", partConfig_Id) :
                new ObjectParameter("PartConfig_Id", typeof(long));
    
            var partActualQtyParameter = partActualQty.HasValue ?
                new ObjectParameter("PartActualQty", partActualQty) :
                new ObjectParameter("PartActualQty", typeof(long));
    
            var machineIdParameter = machineId.HasValue ?
                new ObjectParameter("MachineId", machineId) :
                new ObjectParameter("MachineId", typeof(long));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("created_By", created_By) :
                new ObjectParameter("created_By", typeof(long));
    
            var boschPartNoParameter = boschPartNo != null ?
                new ObjectParameter("BoschPartNo", boschPartNo) :
                new ObjectParameter("BoschPartNo", typeof(string));
    
            var partBatchCodeParameter = partBatchCode != null ?
                new ObjectParameter("PartBatchCode", partBatchCode) :
                new ObjectParameter("PartBatchCode", typeof(string));
    
            var partSerialNoParameter = partSerialNo != null ?
                new ObjectParameter("PartSerialNo", partSerialNo) :
                new ObjectParameter("PartSerialNo", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spInsertBoxLable_Verify", partConfig_IdParameter, partActualQtyParameter, machineIdParameter, created_ByParameter, boschPartNoParameter, partBatchCodeParameter, partSerialNoParameter, codeParameter);
        }
    
        public virtual ObjectResult<spInsertBoxSerialData_Result> spInsertBoxSerialData(Nullable<long> partConfig_Id, Nullable<long> partActualQty, Nullable<long> machineId, Nullable<long> created_By)
        {
            var partConfig_IdParameter = partConfig_Id.HasValue ?
                new ObjectParameter("PartConfig_Id", partConfig_Id) :
                new ObjectParameter("PartConfig_Id", typeof(long));
    
            var partActualQtyParameter = partActualQty.HasValue ?
                new ObjectParameter("PartActualQty", partActualQty) :
                new ObjectParameter("PartActualQty", typeof(long));
    
            var machineIdParameter = machineId.HasValue ?
                new ObjectParameter("MachineId", machineId) :
                new ObjectParameter("MachineId", typeof(long));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("created_By", created_By) :
                new ObjectParameter("created_By", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInsertBoxSerialData_Result>("spInsertBoxSerialData", partConfig_IdParameter, partActualQtyParameter, machineIdParameter, created_ByParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spInsertPalletDetails(Nullable<long> tRN_PalletSerialNo_ID, string boxBatchCode, string boxSerialNo, Nullable<long> machineId, Nullable<long> created_By)
        {
            var tRN_PalletSerialNo_IDParameter = tRN_PalletSerialNo_ID.HasValue ?
                new ObjectParameter("TRN_PalletSerialNo_ID", tRN_PalletSerialNo_ID) :
                new ObjectParameter("TRN_PalletSerialNo_ID", typeof(long));
    
            var boxBatchCodeParameter = boxBatchCode != null ?
                new ObjectParameter("BoxBatchCode", boxBatchCode) :
                new ObjectParameter("BoxBatchCode", typeof(string));
    
            var boxSerialNoParameter = boxSerialNo != null ?
                new ObjectParameter("BoxSerialNo", boxSerialNo) :
                new ObjectParameter("BoxSerialNo", typeof(string));
    
            var machineIdParameter = machineId.HasValue ?
                new ObjectParameter("MachineId", machineId) :
                new ObjectParameter("MachineId", typeof(long));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("created_By", created_By) :
                new ObjectParameter("created_By", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spInsertPalletDetails", tRN_PalletSerialNo_IDParameter, boxBatchCodeParameter, boxSerialNoParameter, machineIdParameter, created_ByParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spInsertPalletLable_Verify(string invoice_No, Nullable<long> partConfig_Id, Nullable<long> invoiceQty, string invoiceDate, Nullable<long> machine_ID, Nullable<long> created_By, string boxBatchCode, string boxSerialNo, string code)
        {
            var invoice_NoParameter = invoice_No != null ?
                new ObjectParameter("Invoice_No", invoice_No) :
                new ObjectParameter("Invoice_No", typeof(string));
    
            var partConfig_IdParameter = partConfig_Id.HasValue ?
                new ObjectParameter("PartConfig_Id", partConfig_Id) :
                new ObjectParameter("PartConfig_Id", typeof(long));
    
            var invoiceQtyParameter = invoiceQty.HasValue ?
                new ObjectParameter("InvoiceQty", invoiceQty) :
                new ObjectParameter("InvoiceQty", typeof(long));
    
            var invoiceDateParameter = invoiceDate != null ?
                new ObjectParameter("InvoiceDate", invoiceDate) :
                new ObjectParameter("InvoiceDate", typeof(string));
    
            var machine_IDParameter = machine_ID.HasValue ?
                new ObjectParameter("Machine_ID", machine_ID) :
                new ObjectParameter("Machine_ID", typeof(long));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(long));
    
            var boxBatchCodeParameter = boxBatchCode != null ?
                new ObjectParameter("BoxBatchCode", boxBatchCode) :
                new ObjectParameter("BoxBatchCode", typeof(string));
    
            var boxSerialNoParameter = boxSerialNo != null ?
                new ObjectParameter("BoxSerialNo", boxSerialNo) :
                new ObjectParameter("BoxSerialNo", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spInsertPalletLable_Verify", invoice_NoParameter, partConfig_IdParameter, invoiceQtyParameter, invoiceDateParameter, machine_IDParameter, created_ByParameter, boxBatchCodeParameter, boxSerialNoParameter, codeParameter);
        }
    
        public virtual ObjectResult<spInsertPalletSerialData_Result> spInsertPalletSerialData(string invoice_No, Nullable<long> partConfig_Id, Nullable<long> invoiceQty, string invoiceDate, Nullable<long> machineId, Nullable<long> created_By)
        {
            var invoice_NoParameter = invoice_No != null ?
                new ObjectParameter("Invoice_No", invoice_No) :
                new ObjectParameter("Invoice_No", typeof(string));
    
            var partConfig_IdParameter = partConfig_Id.HasValue ?
                new ObjectParameter("PartConfig_Id", partConfig_Id) :
                new ObjectParameter("PartConfig_Id", typeof(long));
    
            var invoiceQtyParameter = invoiceQty.HasValue ?
                new ObjectParameter("InvoiceQty", invoiceQty) :
                new ObjectParameter("InvoiceQty", typeof(long));
    
            var invoiceDateParameter = invoiceDate != null ?
                new ObjectParameter("InvoiceDate", invoiceDate) :
                new ObjectParameter("InvoiceDate", typeof(string));
    
            var machineIdParameter = machineId.HasValue ?
                new ObjectParameter("MachineId", machineId) :
                new ObjectParameter("MachineId", typeof(long));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("created_By", created_By) :
                new ObjectParameter("created_By", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInsertPalletSerialData_Result>("spInsertPalletSerialData", invoice_NoParameter, partConfig_IdParameter, invoiceQtyParameter, invoiceDateParameter, machineIdParameter, created_ByParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spInsertPartConfig(string boschPartNo, string custIndex, Nullable<long> mST_Customer_Id, string partdesc, string partSerialNo, string custPartNo, Nullable<long> noOfParts, string packedIn, string lineId, string lineNo, Nullable<long> created_By)
        {
            var boschPartNoParameter = boschPartNo != null ?
                new ObjectParameter("BoschPartNo", boschPartNo) :
                new ObjectParameter("BoschPartNo", typeof(string));
    
            var custIndexParameter = custIndex != null ?
                new ObjectParameter("CustIndex", custIndex) :
                new ObjectParameter("CustIndex", typeof(string));
    
            var mST_Customer_IdParameter = mST_Customer_Id.HasValue ?
                new ObjectParameter("MST_Customer_Id", mST_Customer_Id) :
                new ObjectParameter("MST_Customer_Id", typeof(long));
    
            var partdescParameter = partdesc != null ?
                new ObjectParameter("partdesc", partdesc) :
                new ObjectParameter("partdesc", typeof(string));
    
            var partSerialNoParameter = partSerialNo != null ?
                new ObjectParameter("PartSerialNo", partSerialNo) :
                new ObjectParameter("PartSerialNo", typeof(string));
    
            var custPartNoParameter = custPartNo != null ?
                new ObjectParameter("CustPartNo", custPartNo) :
                new ObjectParameter("CustPartNo", typeof(string));
    
            var noOfPartsParameter = noOfParts.HasValue ?
                new ObjectParameter("NoOfParts", noOfParts) :
                new ObjectParameter("NoOfParts", typeof(long));
    
            var packedInParameter = packedIn != null ?
                new ObjectParameter("PackedIn", packedIn) :
                new ObjectParameter("PackedIn", typeof(string));
    
            var lineIdParameter = lineId != null ?
                new ObjectParameter("LineId", lineId) :
                new ObjectParameter("LineId", typeof(string));
    
            var lineNoParameter = lineNo != null ?
                new ObjectParameter("LineNo", lineNo) :
                new ObjectParameter("LineNo", typeof(string));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("created_By", created_By) :
                new ObjectParameter("created_By", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spInsertPartConfig", boschPartNoParameter, custIndexParameter, mST_Customer_IdParameter, partdescParameter, partSerialNoParameter, custPartNoParameter, noOfPartsParameter, packedInParameter, lineIdParameter, lineNoParameter, created_ByParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spInsertScanbarcode(string partBarcode, string partSerialNo, Nullable<long> created_By)
        {
            var partBarcodeParameter = partBarcode != null ?
                new ObjectParameter("PartBarcode", partBarcode) :
                new ObjectParameter("PartBarcode", typeof(string));
    
            var partSerialNoParameter = partSerialNo != null ?
                new ObjectParameter("PartSerialNo", partSerialNo) :
                new ObjectParameter("PartSerialNo", typeof(string));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("created_By", created_By) :
                new ObjectParameter("created_By", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spInsertScanbarcode", partBarcodeParameter, partSerialNoParameter, created_ByParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> spInsertUserErrorLog(string loginUserId, Nullable<long> partConfigNo, string approved_By, string errorDescription)
        {
            var loginUserIdParameter = loginUserId != null ?
                new ObjectParameter("LoginUserId", loginUserId) :
                new ObjectParameter("LoginUserId", typeof(string));
    
            var partConfigNoParameter = partConfigNo.HasValue ?
                new ObjectParameter("PartConfigNo", partConfigNo) :
                new ObjectParameter("PartConfigNo", typeof(long));
    
            var approved_ByParameter = approved_By != null ?
                new ObjectParameter("Approved_By", approved_By) :
                new ObjectParameter("Approved_By", typeof(string));
    
            var errorDescriptionParameter = errorDescription != null ?
                new ObjectParameter("ErrorDescription", errorDescription) :
                new ObjectParameter("ErrorDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("spInsertUserErrorLog", loginUserIdParameter, partConfigNoParameter, approved_ByParameter, errorDescriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> spInsertUserErrorLog_2(string loginUserId, Nullable<long> partConfigNo, string approved_By, string errorDescription, string invoiceNo, string invoiceDate, Nullable<long> invoiceQty)
        {
            var loginUserIdParameter = loginUserId != null ?
                new ObjectParameter("LoginUserId", loginUserId) :
                new ObjectParameter("LoginUserId", typeof(string));
    
            var partConfigNoParameter = partConfigNo.HasValue ?
                new ObjectParameter("PartConfigNo", partConfigNo) :
                new ObjectParameter("PartConfigNo", typeof(long));
    
            var approved_ByParameter = approved_By != null ?
                new ObjectParameter("Approved_By", approved_By) :
                new ObjectParameter("Approved_By", typeof(string));
    
            var errorDescriptionParameter = errorDescription != null ?
                new ObjectParameter("ErrorDescription", errorDescription) :
                new ObjectParameter("ErrorDescription", typeof(string));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var invoiceDateParameter = invoiceDate != null ?
                new ObjectParameter("InvoiceDate", invoiceDate) :
                new ObjectParameter("InvoiceDate", typeof(string));
    
            var invoiceQtyParameter = invoiceQty.HasValue ?
                new ObjectParameter("InvoiceQty", invoiceQty) :
                new ObjectParameter("InvoiceQty", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("spInsertUserErrorLog_2", loginUserIdParameter, partConfigNoParameter, approved_ByParameter, errorDescriptionParameter, invoiceNoParameter, invoiceDateParameter, invoiceQtyParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spUpdateUserErrorLog(string id, string approved_By)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var approved_ByParameter = approved_By != null ?
                new ObjectParameter("Approved_By", approved_By) :
                new ObjectParameter("Approved_By", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spUpdateUserErrorLog", idParameter, approved_ByParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spUpdateUserErrorLog_2(string id, string approved_By)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var approved_ByParameter = approved_By != null ?
                new ObjectParameter("Approved_By", approved_By) :
                new ObjectParameter("Approved_By", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spUpdateUserErrorLog_2", idParameter, approved_ByParameter);
        }
    
        public virtual ObjectResult<spUserErrorLogReport_Result> spUserErrorLogReport(string user_ID)
        {
            var user_IDParameter = user_ID != null ?
                new ObjectParameter("User_ID", user_ID) :
                new ObjectParameter("User_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUserErrorLogReport_Result>("spUserErrorLogReport", user_IDParameter);
        }
    
        public virtual ObjectResult<spUserErrorLogReport_2_Result> spUserErrorLogReport_2(string user_ID)
        {
            var user_IDParameter = user_ID != null ?
                new ObjectParameter("User_ID", user_ID) :
                new ObjectParameter("User_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUserErrorLogReport_2_Result>("spUserErrorLogReport_2", user_IDParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> spValidateUser(string pLogin_Id, string pUser_PWD)
        {
            var pLogin_IdParameter = pLogin_Id != null ?
                new ObjectParameter("pLogin_Id", pLogin_Id) :
                new ObjectParameter("pLogin_Id", typeof(string));
    
            var pUser_PWDParameter = pUser_PWD != null ?
                new ObjectParameter("pUser_PWD", pUser_PWD) :
                new ObjectParameter("pUser_PWD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("spValidateUser", pLogin_IdParameter, pUser_PWDParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> spValidateUserforLogin(string pLogin_Id, string pUser_PWD)
        {
            var pLogin_IdParameter = pLogin_Id != null ?
                new ObjectParameter("pLogin_Id", pLogin_Id) :
                new ObjectParameter("pLogin_Id", typeof(string));
    
            var pUser_PWDParameter = pUser_PWD != null ?
                new ObjectParameter("pUser_PWD", pUser_PWD) :
                new ObjectParameter("pUser_PWD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("spValidateUserforLogin", pLogin_IdParameter, pUser_PWDParameter);
        }
    
        public virtual ObjectResult<spValidateUserforLoginWithFinger_Result> spValidateUserforLoginWithFinger(string pLogin_Id)
        {
            var pLogin_IdParameter = pLogin_Id != null ?
                new ObjectParameter("pLogin_Id", pLogin_Id) :
                new ObjectParameter("pLogin_Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spValidateUserforLoginWithFinger_Result>("spValidateUserforLoginWithFinger", pLogin_IdParameter);
        }
    }
}
